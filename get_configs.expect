#!/usr/bin/expect --

if {$argc != 3} {
    send_error "\r\n Usage:   get_configs.expect switchIp serverIp configs_dir"
    send_error "\r\n Arguments without spaces        ^        ^   "
    send_error "\r\n Example: get_configs.expect 172.18.0.114 172.18.0.1 /opt/get_configs/configs-auto\r\n"
    exit
}

set switchIp [lindex $argv 0]
set serverIp [lindex $argv 1]
set configDir [lindex $argv 2]

source secrets

log_file ./log/${switchIp}_get_config.log

proc CREATEFILE {} {
    global switchIp configDir timeout
    spawn bash
    expect {
        -re {.*[\$#].*} {
            send "touch $configDir/$switchIp-new\r\n"
            expect { 
                -re {.*[\$#].*} {
                    send "chmod 622 $configDir/$switchIp-new\r\n"
                    expect {
                        -re {.*[\$#].*} {
                            send "exit\r\n"
                        }
                    timeout { send_error "\r\n\t\"Error chmod 622 $configDir/$switchIp-new!!!"; exit }
                    }
                }
                timeout { send_error "\r\n\t\"Error touch $configDir/$switchIp-new!!!"; exit }
            }
        }
        timeout { send_error "\r\n\t\"Error spawn bash!!!"; exit }
    }
}

proc DES121028ME {} {
    global switchIp serverIp username password timeout
    send_error "\r\n$switchIp is DES-1210-28/ME. Continue getting config"
    expect {
            "UserName:" { 
                send "$username\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$password\r"
                        expect {
                            "#" {
                                if {[fork]!=0} exit
                                disconnect
                                send_error "\r\n$switchIp Upload config fork"
                                    set timeout 60
                                    send "upload cfg_toTFTP $serverIp /configs-auto/$switchIp-new config_id 1\r\n"
                                    expect {
                                        "Success" {
                                            send_error "\r\n$switchIp Upload config successful"
                                            sleep 3
                                            exit
                                        }
                                        timeout { send_error "\r\n\t$switchIp Upload config timeout!!!"; exit }
                                    }
                            }
                            timeout { send_error "\r\n\t$switchIp Sent password timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc DGS312024 {} {
    global switchIp serverIp username password timeout
    send_error "\r\n$switchIp is DGS-3120-24. Continue getting config"
    expect {
            "UserName:" { 
                send "$username\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$password\r"
                        expect {
                            "#" {
                                if {[fork]!=0} exit
                                disconnect
                                send_error "\r\n$switchIp Upload config fork"
                                    set timeout 60
                                    send "upload cfg_toTFTP $serverIp dest_file /configs-auto/$switchIp-new\r\n"
                                    expect {
                                        "Upload configuration" {
                                            expect {
                                                "Done" {
                                                    send_error "\r\n$switchIp Upload config successful"
                                                    sleep 3
                                                    exit
                                                }
                                                timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                            }
                                        }
                                    }
                                    timeout { send_error "\r\n\t$switchIp Uploading configuration timeout!!!"; exit }
                            }
                            timeout { send_error "\r\n\t$switchIp Sent password timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc DES1228ME {} {
    global switchIp serverIp username password timeout
    send_error "\r\n$switchIp is DES-1228/ME. Continue getting config"
    expect {
            "UserName:" { 
                send "$username\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$password\r"
                        expect {
                            "#" {
                                if {[fork]!=0} exit
                                disconnect
                                send_error "\r\n$switchIp Upload config fork"
                                set timeout 60
                                 send "upload cfg_toTFTP $serverIp /configs-auto/$switchIp-new config_id 1\r\n"
                                 expect {
                                     "Success" {
                                         send_error "\r\n$switchIp Upload config successful"
                                         sleep 3
                                         exit
                                     }
                                     timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                 }
                            }
                            timeout { send_error "\r\n\t$switchIp Sent password timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc DES320028F {} {
    global switchIp serverIp username password timeout
    send_error "\r\n$switchIp is DES-3200-28F. Continue getting config"
    expect {
            "UserName:" { 
                send "$username\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$password\r"
                        expect {
                            "#" {
                                if {[fork]!=0} exit
                                disconnect
                                send_error "\r\n$switchIp Upload config fork"
                                set timeout 60
                                send "upload cfg_toTFTP $serverIp /configs-auto/$switchIp-new\r\n"
                                expect {
                                    "Success" {
                                        send_error "\r\n$switchIp Upload config successful"
                                        sleep 3
                                        exit
                                    }
                                    timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                }
                            }
                            timeout { send_error "\r\n\t$switchIp Sent password timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc CISCO {} {
    global switchIp serverIp usernameCisco passwordCisco enableCisco timeout
    send_error "\r\n$switchIp is Cisco. Continue getting config"
    expect {
            "Username:" { 
                send "$usernameCisco\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$passwordCisco\r"
                        expect {
                            ">" {
                                send "en\r"
                                expect {                             
                                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd]:} {
                                        send "$enableCisco\r"
                                        expect "#" {
                                            if {[fork]!=0} exit
                                            disconnect
                                            send_error "\r\n$switchIp Upload config fork"
                                            set timeout 120
                                            send "copy running-config tftp://$serverIp/configs-auto/$switchIp-new\r"
                                            expect {
                                                "\[$serverIp\]?" {
                                                    send "\r"
                                                    expect {
                                                        "\[$switchIp-new\]?" {
                                                            send "\r"
                                                            expect {
                                                                "bytes copied" {
                                                                    send_error "\r\n$switchIp Upload config successful"
                                                                    sleep 3
                                                                    exit
                                                                }
                                                                timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                                            }
                                                        }
                                                        timeout { send_error "\r\n\t$switchIp Sent \\r timeout!!!"; exit }
                                                    }
                                                }
                                                timeout { send_error "\r\n\t$switchIp Sent \\r timeout!!!"; exit }
                                            }
                                        }
                                    }
                                    timeout { send_error "\r\n\t$switchIp enable password timeout!!!"; exit }
                                }
                            }
                            timeout { send_error "\r\n\t$switchIp PassowrdCisco timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc REDBACK {} {
    global switchIp serverIp usernameRedback passwordRedback enableRedback timeout
    send_error "\r\n$switchIp is Redback. Continue getting config"
    expect {
            "login:" { 
                send "$usernameRedback\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$passwordRedback\r"
                        expect {
                            ">" {
                                send "en\r"
                                expect {                             
                                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd]:} {
                                        send "$enableRedback\r"
                                        expect "#" {
                                            if {[fork]!=0} exit
                                            disconnect
                                            send_error "\r\n$switchIp Upload config fork"
                                            set timeout 120
                                            send "copy redback.cfg tftp://$serverIp/configs-auto/$switchIp-new\r"
                                            expect {
                                                "transfer successful" {
                                                    send_error "\r\n$switchIp Upload config successful"
                                                    sleep 3
                                                    exit
                                                }
                                                timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                            }
                                        }
                                    }
                                    timeout { send_error "\r\n\t$switchIp enable password timeout!!!"; exit }
                                }
                            }
                            timeout { send_error "\r\n\t$switchIp PassowrdCisco timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}

proc EDGECORE {} {
    global switchIp serverIp username password timeout
    send_error "\r\n$switchIp is Edgecore. Continue getting config"
    expect {
            "Username:" { 
                send "$username\r"
                expect {
                    -re {.*[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd].*} {
                        send "$password\r"
                        expect {
                            "#" {
                                if {[fork]!=0} exit
                                disconnect
                                send_error "\r\n$switchIp Upload config fork"
                                set timeout 60
                                send "copy running-config tftp\r"
                                expect {
                                    "IP address:" {
                                        send "$serverIp\r"
                                        expect {
                                            "file name:" {
                                                send "/configs-auto/$switchIp-new\r"
                                                expect {
                                                    "Success." {
                                                        send_error "\r\n$switchIp Upload config successful"
                                                        sleep 3
                                                        exit
                                                    }
                                                    "Error." {
                                                        send_error "\r\n$switchIp Upload config Error!!!"
                                                        sleep 3
                                                        exit
                                                    }
                                                    timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                                }
                                            }
                                            timeout { send_error "\r\n\t$switchIp Sent \\r timeout!!!"; exit }
                                        }
                                    }
                                    timeout { send_error "\r\n\t$switchIp Uploading config timeout!!!"; exit }
                                }
                            }
                            timeout { send_error "\r\n\t$switchIp Sent password timeout!!!"; exit }
                        }
                    }
                    timeout { send_error "\r\n\t$switchIp Password timeout!!!"; exit}
                }
            }
            timeout { send_error "\r\n\t$switchIp User login timeout!!!"; exit}
    }
}



set timeout 3
CREATEFILE
spawn telnet $switchIp
expect {
    "DES-1210-28/ME"             { DES121028ME }
    "DGS-3120-24"                { DGS312024   }
    "DES-1228/ME"                { DES1228ME   }
    "DES-3200-28F"               { DES320028F  }
    "Redback"                    { REDBACK     }
    "EDGECORE"                   { EDGECORE    }
    "User Access Verification"   { CISCO       }
    timeout { send_error "\r\n\t$switchIp Unknown divice or timeout!!!"; exit}
}


